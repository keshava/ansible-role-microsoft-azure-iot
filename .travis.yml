---
stages:
  - lint
  - test_role
  - test_docker

language: python

sudo: required

services:
  - docker

addons:
  apt:
    update: true

before_install:
  - cp extra_vars.yml.sample exvars.yml
  - sed -ri "s:AZURE_CLI_APPLICATION_ID:${azure_cli_application_id}:" exvars.yml
  - sed -ri "s:AZURE_CLI_APPLICATION_KEY:$azure_cli_application_key:" exvars.yml
  - sed -ri "s:AZURE_CLI_TENANT_ID:${azure_cli_tenant_id}:" exvars.yml
  - sed -ri "s:AZURE_IOT_HUB_NAME:ci-iot-hub:" exvars.yml
  - sed -ri "s:AZURE_IOT_GROUP:ci-iot-group:" exvars.yml

jobs:
  include:
    - stage: lint
      script:
        - ansible-galaxy install -r requirements.yml
        - which ansible-playbook
        - sudo ansible-playbook tests/test.yml -i tests/inventory --check
    - stage: test_role
      script:
        - ansible-galaxy install -r requirements.yml
        - >
          ansible-playbook tests/test.yml -i tests/inventory
          --extra-vars "@exvars.yml"
    - stage: test_docker
      script:
        - docker build -t vmware/azure-iot .
        - >
          docker run -it --rm vmware/azure-iot tests/test.yml
          -i tests/inventory --extra-vars "@exvars.yml" -v
